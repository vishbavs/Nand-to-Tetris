// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load,sel=address[0..2],a=a1,b=b1,c=c1,d=d1,e=e1,f=f1,g=g1,h=h1);
	Register(in=in[0..15],load=a1,out=aa);
	Register(in=in[0..15],load=b1,out=bb);
	Register(in=in[0..15],load=c1,out=cc);
	Register(in=in[0..15],load=d1,out=dd);
	Register(in=in[0..15],load=e1,out=ee);
	Register(in=in[0..15],load=f1,out=ff);
	Register(in=in[0..15],load=g1,out=gg);
	Register(in=in[0..15],load=h1,out=hh);
	Mux8Way16(a=aa,b=bb,c=cc,d=dd,h=hh,e=ee,f=ff,g=gg,h=hh,sel=address[0..2],out=out[0..15]);
}