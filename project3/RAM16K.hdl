// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
DMux4Way(in=load,sel=address[0..1],a=a1,b=b1,c=c1,d=d1);
	RAM4K(in=in[0..15],load=a1,address=address[2..13],out=aa);
	RAM4K(in=in[0..15],load=b1,address=address[2..13],out=bb);
	RAM4K(in=in[0..15],load=c1,address=address[2..13],out=cc);
	RAM4K(in=in[0..15],load=d1,address=address[2..13],out=dd);
	Mux4Way16(a=aa,b=bb,c=cc,d=dd,sel=address[0..1],out=out[0..15]);
}